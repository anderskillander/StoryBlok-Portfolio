{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/anderskillander/WebDev/HyperProjects/Data-Interaction/StoryBlok-Portfolio/pages/about.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/* ðŸŒˆ This is the client side ðŸŒˆ*/\n\n/* dependencies */\nimport fetch from \"isomorphic-unfetch\";\nimport Link from 'next/link';\n/* layout */\n\nimport DefaultLayout from \"../components/layouts/DefaultLayout\";\n/* components */\n\nimport ImageModule from \"../components/modules/ImageModule\";\n/* Helper function to fetch data - do we need this as an extra function? Debatable. ðŸ˜Š */\n\nfunction fetchUrl(url) {\n  return fetch(url).then(function (r) {\n    return r.json();\n  });\n}\n/* This route gets hit when our user appends a slug to\nthe url and therefore the page request, e.g. your-site.com/about */\n\n\nvar AboutPage = function AboutPage(_ref) {\n  var data = _ref.data;\n  var content = data.content;\n  var imageModuleData = content.body.find(function (item) {\n    return item.component === \"Image Module\";\n  });\n  console.log(\"\\uD83C\\uDF08 I am getting this content from Storybok\");\n  console.log(content);\n  /* ---- */\n\n  return __jsx(DefaultLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, imageModuleData ? __jsx(ImageModule, {\n    image: imageModuleData.image,\n    copy: imageModuleData.copy,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }) : null);\n};\n/* Before rendering, we are calling our internal API endpoint (server).\nThis call is hitting the code we wrote in 'pages/api/page/[slug].js' */\n\n\nSlugPage.getInitialProps = function _callee(_ref2) {\n  var query, page, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query;\n\n          /* {query} is an object we receive within this method from Next,\n            so that we can retrieve the slug (e.g. '/welcome') coming with the route */\n          page = query.page;\n          /* Calling our internal api endpoint so that we can fetch Storyblok content\n            server-side (we are on client-side here) */\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetchUrl(\"http://localhost:3000/api/page/\".concat(page)));\n\n        case 4:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default AboutPage;","map":{"version":3,"sources":["/Users/anderskillander/WebDev/HyperProjects/Data-Interaction/StoryBlok-Portfolio/pages/about.js"],"names":["fetch","Link","DefaultLayout","ImageModule","fetchUrl","url","then","r","json","AboutPage","data","content","imageModuleData","body","find","item","component","console","log","image","copy","SlugPage","getInitialProps","query","page"],"mappings":";;;;;AAAA;;AAEA;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA;;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AAEA;;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AAGA;;AACA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACnB,SAAOL,KAAK,CAACK,GAAD,CAAL,CAAWC,IAAX,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,GAAjB,CAAP;AACH;AAED;;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAAA,MACpBC,OADoB,GACRD,IADQ,CACpBC,OADoB;AAE5B,MAAMC,eAAe,GAAGD,OAAO,CAACE,IAAR,CAAaC,IAAb,CACpB,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,SAAL,KAAmB,cAA7B;AAAA,GADoB,CAAxB;AAGAC,EAAAA,OAAO,CAACC,GAAR;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACA;;AACA,SACI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKC,eAAe,GACZ,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEA,eAAe,CAACO,KAApC;AAA2C,IAAA,IAAI,EAAEP,eAAe,CAACQ,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,GAEZ,IAJR,CADJ;AASH,CAjBD;AAoBA;;;;AAEAC,QAAQ,CAACC,eAAT,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,SAASA,KAAT;;AACvB;;AAEQC,UAAAA,IAHe,GAGND,KAHM,CAGfC,IAHe;AAIvB;;;AAJuB;AAAA,2CAMJpB,QAAQ,0CAAmCoB,IAAnC,EANJ;;AAAA;AAMjBd,UAAAA,IANiB;AAAA,2CAQhB;AAAEA,YAAAA,IAAI,EAAJA;AAAF,WARgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAWA,eAAeD,SAAf","sourcesContent":["/* ðŸŒˆ This is the client side ðŸŒˆ*/\n\n/* dependencies */\nimport fetch from \"isomorphic-unfetch\";\nimport Link from 'next/link';\n/* layout */\nimport DefaultLayout from \"../components/layouts/DefaultLayout\";\n\n/* components */\nimport ImageModule from \"../components/modules/ImageModule\";\n\n\n/* Helper function to fetch data - do we need this as an extra function? Debatable. ðŸ˜Š */\nfunction fetchUrl(url) {\n    return fetch(url).then(r => r.json());\n}\n\n/* This route gets hit when our user appends a slug to\nthe url and therefore the page request, e.g. your-site.com/about */\nconst AboutPage = ({ data }) => {\n    const { content } = data;\n    const imageModuleData = content.body.find(\n        (item) => item.component === \"Image Module\"\n    );\n    console.log(`ðŸŒˆ I am getting this content from Storybok`);\n    console.log(content);\n    /* ---- */\n    return (\n        <DefaultLayout>\n\n            {imageModuleData ? (\n                <ImageModule image={imageModuleData.image} copy={imageModuleData.copy} />\n            ) : null}\n\n        </DefaultLayout>\n    );\n};\n\n\n/* Before rendering, we are calling our internal API endpoint (server).\nThis call is hitting the code we wrote in 'pages/api/page/[slug].js' */\nSlugPage.getInitialProps = async ({ query }) => {\n    /* {query} is an object we receive within this method from Next,\n      so that we can retrieve the slug (e.g. '/welcome') coming with the route */\n    const { page } = query;\n    /* Calling our internal api endpoint so that we can fetch Storyblok content\n      server-side (we are on client-side here) */\n    const data = await fetchUrl(`http://localhost:3000/api/page/${page}`);\n    /* Returning the data back into SlugPage as props */\n    return { data }; /* This is the same as { data: data } */\n};\n\nexport default AboutPage;"]},"metadata":{},"sourceType":"module"}