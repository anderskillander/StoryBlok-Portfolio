{"version":3,"file":"static/webpack/static/development/pages/blog.js.3d300744ffd3d8084703.hot-update.js","sources":["webpack:///./components/modules/HeadlineModule/index.jsx","webpack:///./components/modules/ImageModule/index.jsx","webpack:///./components/modules/ParagraphModule/index.jsx","webpack:///./pages/blog.js"],"sourcesContent":["/* styles */\nimport style from './index.scss';\n\nconst HeadlineModule = ({ title }) => {\n\treturn <h1 className={style.root}>{title}</h1>;\n};\n\nexport default HeadlineModule;\n","/* styles */\nimport style from './index.scss';\n\nconst ImageModule = ({ copy }) => {\n    return (\n        <div className={style.root}>\n            <img src={copy}></img>\n        </div>\n    );\n};\n\nexport default ImageModule;\n","/* styles */\nimport style from './index.scss';\n\nconst ParagraphModule = ({ copy }) => {\n\treturn (\n\t\t<div className={style.root}>\n\t\t\t<p>{copy}</p>\n\t\t</div>\n\t);\n};\n\nexport default ParagraphModule;\n","/* ðŸŒˆ This is the client side ðŸŒˆ*/\n\n/* dependencies */\nimport fetch from \"isomorphic-unfetch\";\nimport Link from 'next/link';\n/* layout */\nimport DefaultLayout from \"../components/layouts/DefaultLayout\";\n\n/* components */\nimport HeadlineModule from \"../components/modules/HeadlineModule\";\nimport ParagraphModule from \"../components/modules/ParagraphModule\";\nimport ImageModule from \"../components/modules/ImageModule\";\n\n\n/* Helper function to fetch data - do we need this as an extra function? Debatable. ðŸ˜Š */\nfunction fetchUrl(url) {\n    return fetch(url).then(r => r.json());\n}\n\n/* This route gets hit when our user appends a slug to\nthe url and therefore the page request, e.g. your-site.com/about */\nconst SlugPage = ({ data }) => {\n    const { content } = data;\n    const headlineModuleData = content.body.find(\n        item => item.component === \"HeadlineModule\"\n    );\n    const paragraphModuleData = content.body.find(\n        item => item.component === \"Paragraph Module\"\n    );\n    const imageModuleData = content.body.find(\n        item => item.component === \"ImageModule\"\n    );\n    console.log(`ðŸŒˆ I am getting this content from Storybok`);\n    console.log(content);\n    /* ---- */\n    return (\n        <DefaultLayout>\n            {/* <h3>This is what you are getting back from Storyblok:</h3> */}\n            {headlineModuleData ? (\n                <HeadlineModule title={headlineModuleData.title} />\n            ) : null}\n            {paragraphModuleData ? (\n                <ParagraphModule copy={paragraphModuleData.text} />\n            ) : null}\n            {imageModuleData ? (\n                <ImageModule copy={imageModuleData.image} />\n            ) : null}\n        </DefaultLayout>\n    );\n};\n\n/* Before rendering, we are calling our internal API endpoint (server).\nThis call is hitting the code we wrote in 'pages/api/page/[slug].js' */\nSlugPage.getInitialProps = async ({ query }) => {\n    /* {query} is an object we receive within this method from Next,\n      so that we can retrieve the slug (e.g. '/welcome') coming with the route */\n    const { page } = query;\n    /* Calling our internal api endpoint so that we can fetch Storyblok content\n      server-side (we are on client-side here) */\n    const data = await fetchUrl(`http://localhost:3000/api/page/${page}`);\n    /* Returning the data back into SlugPage as props */\n    return { data }; /* This is the same as { data: data } */\n};\n\nexport default SlugPage;"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;;;;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;;AAEA;AACA;;;AAJA;AAAA;AACA;AADA;AAMA;AANA;AAQA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;;;;A","sourceRoot":""}