{"version":3,"file":"static/webpack/static/development/pages/[page].js.5c19292099eb65790adc.hot-update.js","sources":["webpack:///./components/layouts/AboutLayout/index.js","webpack:///./pages/[page].js"],"sourcesContent":["/* styles */\nimport style from './index.scss';\nimport resets from '../DefaultLayout/styleReset.scss';\n\n/* components */\nimport Head from '../../common/Head';\n\nconst AboutLayout = (props) => {\n    const title = 'About Layout';\n    const description = 'This is the styling for the About Page';\n\n    return (\n        <div className={(resets, style.root)}>\n            <div className={style.pageWrapper}>\n                <Head title={title} description={description} />\n                {props.children}\n            </div>\n        </div>\n    );\n};\n\nexport default AboutLayout;\n","/* ðŸŒˆ This is the client side ðŸŒˆ*/\n\n/* dependencies */\nimport fetch from \"isomorphic-unfetch\";\nimport Link from 'next/link';\n/* layout */\nimport DefaultLayout from \"../components/layouts/DefaultLayout\";\nimport AboutLayout from \"../components/layouts/AboutLayout\"\n/* components */\nimport HeadlineModule from \"../components/modules/HeadlineModule\";\nimport ParagraphModule from \"../components/modules/ParagraphModule\";\nimport ImageModule from \"../components/modules/ImageModule\";\n\n\n/* Helper function to fetch data - do we need this as an extra function? Debatable. ðŸ˜Š */\nfunction fetchUrl(url) {\n  return fetch(url).then(r => r.json());\n}\n\n/* This route gets hit when our user appends a slug to\nthe url and therefore the page request, e.g. your-site.com/about */\nconst SlugPage = ({ data }) => {\n  const { content } = data;\n  const headlineModuleData = content.body.find(\n    (item) => item.component === \"Headline Module\"\n  );\n  const paragraphModuleData = content.body.find(\n    (item) => item.component === \"Paragraph Module\"\n  );\n  const imageModuleData = content.body.find((item) => item.component == 'Image Module');\n  console.log(`ðŸŒˆ I am getting this content from Storybok`);\n  console.log(content);\n  /* ---- */\n  return (\n\n    <DefaultLayout>\n      {content.component === 'about' ? <About /> : null}\n\n      {headlineModuleData ? (\n        <HeadlineModule title={headlineModuleData.title} />\n      ) : null}\n\n      {paragraphModuleData ? (\n        <ParagraphModule copy={paragraphModuleData.text} />\n      ) : null}\n\n      {imageModuleData ? (\n        <ImageModule copy={imageModuleData.copy} image={imageModuleData.image} />) : null}\n\n    </DefaultLayout>\n\n\n  );\n};\n\n\n/* Before rendering, we are calling our internal API endpoint (server).\nThis call is hitting the code we wrote in 'pages/api/page/[slug].js' */\nSlugPage.getInitialProps = async ({ query }) => {\n  /* {query} is an object we receive within this method from Next,\n\tso that we can retrieve the slug (e.g. '/welcome') coming with the route */\n  const { page } = query;\n  /* Calling our internal api endpoint so that we can fetch Storyblok content\n\tserver-side (we are on client-side here) */\n  const data = await fetchUrl(`http://localhost:3000/api/page/${page}`);\n  /* Returning the data back into SlugPage as props */\n  return { data }; /* This is the same as { data: data } */\n};\n\nexport default SlugPage;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;;;;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;;AAEA;AACA;;;AAJA;AAAA;AACA;AADA;AAMA;AANA;AAQA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;;;;A","sourceRoot":""}